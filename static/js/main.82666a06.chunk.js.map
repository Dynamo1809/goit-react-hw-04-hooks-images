{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.jsx","components/Button/Button.jsx","services/pixabay-api.js","components/ImageGallery/ImageGallery.jsx","components/Searchbar/Searchbar.jsx","components/Modal/Modal.jsx","App.js","index.js"],"names":["ImageGalleryItem","webformatURL","largeImageURL","onOpenModal","className","onClick","src","alt","Button","type","API_KEY","BASE_URL","api","fetchPhotos","searchName","page","perPage","fetch","then","response","ok","json","Promise","reject","Error","Status","ImageGallery","searchQuery","useState","images","setImages","error","setError","isLoader","setIsLoader","setPage","status","setStatus","prevSearchQuery","value","ref","useRef","useEffect","current","usePrevious","resetPage","PixabayAPI","res","hits","catch","message","prevImages","window","scrollTo","top","document","documentElement","scrollHeight","behavior","style","textAlign","length","map","id","color","e","prevPage","Searchbar","onSubmit","setSearchQuery","reset","preventDefault","trim","toast","autoComplete","autoFocus","placeholder","onChange","currentTarget","toLowerCase","modalRoot","querySelector","Modal","onClose","handleKeyDownClick","useCallback","code","addEventListener","removeEventListener","createPortal","target","App","modalImageSrc","setModalImageSrc","toggleModal","autoClose","newQuery","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.82666a06.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nexport const ImageGalleryItem = ({ webformatURL, largeImageURL, onOpenModal }) => (\r\n  <li className=\"ImageGalleryItem\">\r\n    <img \r\n      onClick={() => onOpenModal(largeImageURL)}\r\n      src={webformatURL} \r\n      alt=\"\" \r\n      className=\"ImageGalleryItem-image\" \r\n    />\r\n  </li>\r\n);\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired, \r\n  largeImageURL: PropTypes.string.isRequired,\r\n  onOpenModal: PropTypes.func.isRequired,\r\n}","export const Button = ({onClick}) => {\r\n  return (\r\n    <button \r\n      onClick={onClick} \r\n      type=\"button\" \r\n      className=\"Button\"\r\n    >\r\n    Load more\r\n    </button>\r\n  )\r\n};\r\n\r\n","const API_KEY = '21948076-53f9c976759f5ce811ed96a6f';\r\nconst BASE_URL = 'https://pixabay.com/api/?image_type=photo&orientation=horizontal&';\r\n\r\nfunction fetchPhotos( searchName = '', page = 1, perPage = 12 )  {\r\n  return fetch(`${BASE_URL}q=${searchName}&page=${page}&key=${API_KEY}&per_page=${perPage}`)\r\n    .then((response) => {\r\n      if(response.ok) {\r\n        return response.json()\r\n      }\r\n      return Promise.reject(new Error(`Помилка запиту`))\r\n    })\r\n};\r\n\r\nconst api ={\r\n  fetchPhotos\r\n};\r\n\r\nexport default api;","import { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport Loader from \"react-loader-spinner\";\r\nimport { ImageGalleryItem } from 'components/ImageGalleryItem';\r\nimport { Button } from 'components/Button';\r\nimport PixabayAPI from 'services/pixabay-api';\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n}\r\n\r\nfunction usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]);\r\n  return ref.current;\r\n}\r\n\r\nexport function ImageGallery({ searchQuery, onOpenModal }) {\r\n  const [images, setImages] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [isLoader, setIsLoader] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n\r\n  const prevSearchQuery = usePrevious(searchQuery);\r\n\r\n  useEffect(() => {\r\n    if(!searchQuery) {\r\n      return;\r\n    }\r\n\r\n    setIsLoader(true);\r\n\r\n    if(prevSearchQuery !== searchQuery) {\r\n      resetPage();\r\n\r\n      PixabayAPI\r\n      .fetchPhotos(searchQuery)\r\n      .then(res => {      \r\n        setStatus(Status.RESOLVED);\r\n        setImages(res.hits);\r\n        setIsLoader(false); \r\n      })\r\n      .catch(error => {\r\n        setError(error.message);\r\n        setStatus(Status.REJECTED);\r\n      });\r\n      \r\n      return;\r\n    };\r\n\r\n    if(page !== 1 && prevSearchQuery === searchQuery) {\r\n      PixabayAPI\r\n      .fetchPhotos(searchQuery, page)\r\n      .then(res => { \r\n        setStatus(Status.RESOLVED);\r\n        setImages( prevImages => [...prevImages, ...res.hits]);  \r\n        setIsLoader(false);\r\n\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight,\r\n          behavior: 'smooth',\r\n        });\r\n\r\n      })        \r\n      .catch(error => {\r\n        setError(error.message);\r\n        setStatus(Status.REJECTED);\r\n      });\r\n\r\n    };\r\n    \r\n  }, [page, searchQuery, prevSearchQuery]);\r\n\r\n  const handleLoadMoreClick = (e) => setPage(prevPage => prevPage + 1);\r\n\r\n  const resetPage = () => {\r\n    setPage(1);\r\n    setStatus(Status.IDLE);\r\n  };\r\n  \r\n  if(status === Status.IDLE) {return null};\r\n\r\n  if(status === Status.REJECTED) {return <h1 style={{textAlign: 'center'}}>Помилка запиту: '{error}'</h1>};\r\n  \r\n  if(status === Status.RESOLVED) {\r\n    return images.length !== 0 ? (\r\n      <>\r\n        <ul className=\"ImageGallery\">            \r\n          {images.map( ({ id, webformatURL, largeImageURL }) => (\r\n            <ImageGalleryItem \r\n              onOpenModal={onOpenModal} \r\n              key={id} \r\n              webformatURL={webformatURL} \r\n              largeImageURL={largeImageURL}/>\r\n          ))}         \r\n        </ul>\r\n\r\n        { isLoader && <Loader className=\"Loader\" type=\"ThreeDots\" color=\"#3f51b5\" />}\r\n        \r\n        { images.length % 12 === 0 && <Button onClick={handleLoadMoreClick} /> }            \r\n      \r\n      </>\r\n        ): (            \r\n          <h2 style={{textAlign: 'center'}}>Немає зображень за запитом '{searchQuery}'</h2>\r\n        )         \r\n  };\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array,\r\n  error: PropTypes.string,\r\n  isLoader: PropTypes.bool,\r\n  page: PropTypes.number,\r\n  status: PropTypes.string,\r\n};","import { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport function Searchbar({ onSubmit }) {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  const handleSearchChange = ({ currentTarget }) => {\r\n    const { value } = currentTarget;  \r\n    setSearchQuery(value.toLowerCase());\r\n  };\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if(searchQuery.trim() === '') {\r\n      toast.error(`Введіть текст`);\r\n      return;\r\n    }\r\n    onSubmit(searchQuery)\r\n    reset();\r\n  };\r\n\r\n  const reset = () => setSearchQuery('');\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form onSubmit={handleFormSubmit}  className=\"SearchForm\">\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          value={searchQuery}\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={handleSearchChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n  \r\n};\r\n\r\nSearchbar.propTypes = {\r\n  searchQuery: PropTypes.string\r\n};","import { useEffect, useCallback } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport function Modal({ src, onClose }) {\r\n\r\n  const handleKeyDownClick = useCallback(\r\n    (e) => { \r\n      if(e.code === 'Escape') {\r\n        onClose('');\r\n      }\r\n    },\r\n    [onClose],\r\n  );\r\n  \r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDownClick);\r\n    return () => window.removeEventListener('keydown', handleKeyDownClick);   \r\n  }, [handleKeyDownClick]);\r\n  \r\n\r\n  const handleBackdropClick = e => {\r\n    if(e.currentTarget === e.target) {\r\n      onClose('');\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\r\n      <div className=\"Modal\">\r\n        <img src={src} alt=\"\" />\r\n      </div>\r\n    </div>,\r\n    modalRoot);   \r\n};\r\n\r\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n// Components //\nimport { ImageGallery } from 'components/ImageGallery';\nimport { Searchbar } from 'components/Searchbar';\nimport { Modal } from 'components/Modal';\nimport { ToastContainer, toast } from 'react-toastify';\n\nfunction App() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [modalImageSrc, setModalImageSrc] = useState('');\n\n  const handleSubmit = newQuery => {\n    if(searchQuery === newQuery) {\n      toast(`Search name '${newQuery}' already used`)\n      return;\n    }\n    setSearchQuery(newQuery);\n  };\n\n  const toggleModal = (src) => setModalImageSrc(src);\n\n    return (\n      <div className=\"App\">     \n        {modalImageSrc && <Modal src={modalImageSrc} onClose={toggleModal}/>}\n        <ToastContainer autoClose={1500}/>\n        <Searchbar onSubmit={handleSubmit} />\n        <ImageGallery onOpenModal={toggleModal} searchQuery={searchQuery} />\n      </div>\n    );\n};\n\nexport default App;\n\nApp.propTypes = {\n  searchQuery: PropTypes.string,\n  modalImageSrc: PropTypes.string,\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport 'react-toastify/dist/ReactToastify.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}